SQL_SELECT_RULE0=SELECT * FROM TABLE_1
SQL_SELECT_RULE1=SELECT COLUMN_1, COLUMN_2 FROM TABLE_1 
SQL_SELECT_RULE2=SELECT DISTINCT COLUMN_1 FROM TABLE_1
SQL_SELECT_RULE3=SELECT COUNT(DISTINCT COLUMN_1) FROM TABLE_1
SQL_SELECT_RULE4=SELECT Count(*) AS COLUMN_1 FROM (SELECT DISTINCT COLUMN_1 FROM TABLE_1) 
SQL_SELECT_RULE5=SELECT * FROM TABLE_1 WHERE COLUMN_1='ABC' 
SQL_SELECT_RULE6=SELECT * FROM TABLE_1 WHERE COLUMN_1='ABC' AND COLUMN_2='DEF' 
SQL_SELECT_RULE7=SELECT * FROM TABLE_1 WHERE COLUMN_1='ABC' OR COLUMN_2='DEF'
SQL_SELECT_RULE8=SELECT * FROM TABLE_1 WHERE NOT COLUMN_1='ABC' 
SQL_SELECT_RULE9=SELECT * FROM TABLE_1 WHERE COLUMN_1='ABC' AND (City='Berlin' OR City='München') 
SQL_SELECT_RULE10=SELECT * FROM TABLE_1 ORDER BY COLUMN_1
SQL_SELECT_RULE11=SELECT * FROM TABLE_1 ORDER BY COLUMN_1 DESC 
SQL_SELECT_RULE12=SELECT * FROM TABLE_1 ORDER BY COLUMN_1, COLUMN_2
SQL_SELECT_RULE13=SELECT * FROM TABLE_1 ORDER BY COLUMN_1 ASC, COLUMN_2 DESC 
SQL_SELECT_RULE14=SELECT TOP 3 * FROM TABLE_1
SQL_SELECT_RULE15=SELECT * FROM TABLE_1 WHERE ROWNUM <= 3 
SQL_SELECT_RULE16=SELECT TOP 50 PERCENT * FROM TABLE_1
SQL_SELECT_RULE17=SELECT * FROM TABLE_1 WHERE COLUMN_1='Germany' LIMIT 3 
SQL_SELECT_RULE18=SELECT * FROM TABLE_1 WHERE COLUMN_1='Germany' AND ROWNUM <= 3 
SQL_SELECT_RULE19=SELECT MIN(COLUMN_1) AS COLUMN_A FROM TABLE_1 
SQL_SELECT_RULE20=SELECT MAX(COLUMN_1) AS COLUMN_A FROM TABLE_1
SQL_SELECT_RULE21=SELECT COUNT(COLUMN_1) FROM TABLE_1
SQL_SELECT_RULE22=SELECT AVG(COLUMN_1) FROM TABLE_1 T
SQL_SELECT_RULE23=SELECT SUM(COLUMN_1) FROM TABLE_1
SQL_SELECT_RULE24=SELECT * FROM TABLE_1 WHERE COLUMN_1 LIKE 'a%' 
SQL_SELECT_RULE25=SELECT * FROM TABLE_1 WHERE COLUMN_1 LIKE '%a' 
SQL_SELECT_RULE26=SELECT * FROM TABLE_1 WHERE COLUMN_1 LIKE '%or%'
SQL_SELECT_RULE27=SELECT * FROM TABLE_1 WHERE COLUMN_1 LIKE '_r%'
SQL_SELECT_RULE28=SELECT * FROM TABLE_1 WHERE COLUMN_1 LIKE 'a_%_%'
SQL_SELECT_RULE29=SELECT * FROM TABLE_1 WHERE COLUMN_1 LIKE '_erlin'
SQL_SELECT_RULE30=SELECT * FROM TABLE_1 WHERE COLUMN_1 LIKE '[bsp]%'
SQL_SELECT_RULE31=SELECT * FROM TABLE_1 WHERE COLUMN_1 IN ('Germany', 'France', 'UK')
SQL_SELECT_RULE32=SELECT * FROM TABLE_1 WHERE COLUMN_1 NOT IN ('Germany', 'France', 'UK')
SQL_SELECT_RULE33=SELECT * FROM TABLE_1 WHERE COLUMN_1 IN (SELECT COLUMN_2 FROM Suppliers)
SQL_SELECT_RULE34=SELECT * FROM TABLE_1 WHERE COLUMN_1 BETWEEN 10 AND 20
SQL_SELECT_RULE35=SELECT * FROM TABLE_1 WHERE COLUMN_1 NOT BETWEEN 10 AND 20
SQL_SELECT_RULE36=SELECT * FROM TABLE_1 WHERE (COLUMN_1 BETWEEN 10 AND 20) AND NOT COLUMN_2 IN (1,2,3)
SQL_SELECT_RULE37=SELECT CustomerID as ID, CustomerName AS Customer FROM Customers
SQL_SELECT_RULE38=SELECT Orders.OrderID, Customers.CustomerName, Orders.OrderDate FROM Orders INNER JOIN Customers ON Orders.CustomerID=Customers.CustomerID
SQL_SELECT_RULE39=SELECT Customers.CustomerName, Orders.OrderID FROM Customers LEFT JOIN Orders ON Customers.CustomerID = Orders.CustomerID ORDER BY Customers.CustomerName
SQL_SELECT_RULE40=SELECT Orders.OrderID, Employees.LastName, Employees.FirstName FROM Orders RIGHT JOIN Employees ON Orders.EmployeeID = Employees.EmployeeID ORDER BY Orders.OrderID
SQL_SELECT_RULE41=SELECT Customers.CustomerName, Orders.OrderID FROM Customers FULL OUTER JOIN Orders ON Customers.CustomerID=Orders.CustomerID ORDER BY Customers.CustomerName
SQL_SELECT_RULE42=SELECT A.CustomerName AS CustomerName1, B.CustomerName AS CustomerName2, A.City FROM Customers A, Customers B WHERE A.CustomerID <> B.CustomerID AND A.City = B.City  ORDER BY A.City
SQL_SELECT_RULE43=SELECT City FROM Customers UNION SELECT City FROM Suppliers ORDER BY City
SQL_SELECT_RULE44=SELECT City FROM Customers UNION ALL SELECT City FROM Suppliers ORDER BY City
SQL_SELECT_RULE45=SELECT COUNT(CustomerID), Country FROM Customers GROUP BY Country
SQL_SELECT_RULE46=SELECT COUNT(CustomerID), Country FROM Customers GROUP BY Country ORDER BY COUNT(CustomerID) DESC
SQL_SELECT_RULE47=SELECT COUNT(CustomerID), Country FROM Customers GROUP BY Country HAVING COUNT(CustomerID) > 5
SQL_SELECT_RULE48=SELECT COUNT(CustomerID), Country FROM Customers GROUP BY Country HAVING COUNT(CustomerID) > 5
SQL_SELECT_RULE49=SELECT COUNT(CustomerID), Country FROM Customers GROUP BY Country HAVING COUNT(CustomerID) > 5 ORDER BY COUNT(CustomerID) DESC
SQL_SELECT_RULE50=SELECT SupplierName FROM Suppliers WHERE EXISTS (SELECT ProductName FROM Products WHERE SupplierId = Suppliers.supplierId AND Price < 20)
SQL_SELECT_RULE51=SELECT ProductName FROM Products WHERE ProductID = ANY (SELECT ProductID FROM OrderDetails WHERE Quantity = 10)
SQL_SELECT_RULE52=SELECT * INTO CustomersBackup2017 FROM Customers INSERT INTO Customers (CustomerName, City, Country) 